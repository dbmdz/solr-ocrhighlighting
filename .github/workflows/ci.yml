on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 11
          cache: maven
      - name: Build with Maven and run unit tests
        run: mvn -B package
      - name: Create Solr 7/8 JAR
        run: ./util/patch_solr78_bytecode.py
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/*.jar

  integration_tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./target
      - name: Change permissions on build artifacts
        run: chmod -R a+rw ./target
      - name: Run integration tests
        run: ./integration-tests/run.sh

  publish_mkdocs_latest:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs singledispatch mkdocs-material mike
      - name: Deploy documentation with mike
        run: |
          git config user.name mkdocs-mike
          git config user.email mkdocs-mike@nowhere.tld
          git fetch origin gh-pages
          mike deploy -p --rebase ${{github.ref_name}} latest


  publish_mkdocs_wip:
    if: github.event_name == 'push' && contains(github.ref, 'main')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs singledispatch mkdocs-material mike
      - name: Deploy documentation with mike
        run: |
          git config user.name mkdocs-mike
          git config user.email mkdocs-mike@nowhere.tld
          git fetch origin gh-pages
          mike deploy -p --rebase wip

  pre-release:
    name: "Pre Release"
    if: github.event_name == 'push' && contains(github.ref, 'main')
    runs-on: "ubuntu-latest"
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "wip"
          prerelease: true
          title: "WIP build (use at own risk)"
          files: |
            solr-ocrhighlighting-*.jar

  update_wip_repository:
    if: github.event_name == 'push' && contains(github.ref, 'main')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'
      - name: Install dependencies
        run: |
          sudo apt-get install -y openssl git
      - name: Update repository
        run: |
          git config --global user.name gh-actions
          git config --global user.email ocrhl-gh-actions@nowhere.tld
          ./util/update_repo.py
        env:
          CERTIFICATE: ${{ secrets.CERTIFICATE }}
          GH_DEPLOY_TOKEN: ${{ secrets.GH_DEPLOY_TOKEN }}