trigger:
  tags:
    include:
      - '*'

strategy:
  matrix:
    x86_64-pc-windows-msvc:
      HOST_IMAGE: vs2017-win2016
      TARGET: x86_64-pc-windows-msvc
    x86_64-apple-darwin:
      HOST_IMAGE: macos-10.13
      TARGET: x86_64-apple-darwin

pool:
  vmImage: $[ variables['HOST_IMAGE'] ]

steps:
  - powershell: Invoke-WebRequest -Uri https://win.rustup.rs/ -OutFile rustup-init.exe
    condition: and(succeeded(), eq(variables['Agent.OS'],'Windows_NT'))
    displayName: Install rustup [Windows]
  - script: |
      rustup-init.exe -y --default-host "%TARGET%" --default-toolchain stable
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo "##vso[task.setvariable variable=PATH;]%PATH%"
      cd offsets-parser
    condition: and(succeeded(), eq(variables['Agent.OS'],'Windows_NT'))
    displayName: Install toolchain [Windows]
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-host "$TARGET" --default-toolchain stable
      export PATH=$PATH:~/.cargo/bin
      echo "##vso[task.setvariable variable=PATH;]$PATH"
    condition: and(succeeded(), ne(variables['Agent.OS'],'Windows_NT'))
    displayName: Install rustup and toolchain [OSX]
  - script: |
      cd offsets-parser
      cargo build --release
  - powershell: Compress-Archive -Path $env:BUILD_REPOSITORY_LOCALPATH\offsets-parser\target\release\offsets-parser.exe -DestinationPath $env:BUILD_ARTIFACTSTAGINGDIRECTORY\offsets-parser-$($env:BUILD_SOURCEBRANCHNAME)_$($env:TARGET).zip
    condition: and(succeeded(), eq(variables['Agent.OS'],'Windows_NT'))
    displayName: Package Windows binary
  - script: |
      cd offsets-parser/target/release
      zip $BUILD_ARTIFACTSTAGINGDIRECTORY/offsets-parser-${BUILD_SOURCEBRANCHNAME}_${TARGET}.zip offsets-parser
    condition: and(succeeded(), ne(variables['Agent.OS'],'Windows_NT'))
    displayName: Package OSX binary
  - task: GithubRelease@0
    displayName: Add binaries to GitHub release
    inputs:
      gitHubConnection: jbaiter-personal
      repositoryName: dbmdz/solr-ocrhighlighting
      assets: $(Build.ArtifactStagingDirectory)/*.zip
      assetUploadMode: 'replace'